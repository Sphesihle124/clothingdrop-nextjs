@echo off
title ClothingDrop - Publish to GitHub
color 0E

echo.
echo ========================================================
echo   ClothingDrop - Publish to GitHub
echo   (Automated Git setup and GitHub publishing)
echo ========================================================
echo.

REM Change to project directory
cd /d "%~dp0"

echo üìÅ Current directory: %CD%
echo.

REM Check if Git is installed
echo üîç Checking Git installation...
git --version >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Git is not installed!
    echo.
    echo üì• Please install Git first:
    echo    1. Go to https://git-scm.com/download/windows
    echo    2. Download and install Git
    echo    3. Restart computer
    echo    4. Run this script again
    echo.
    pause
    exit /b 1
)

for /f "tokens=*" %%i in ('git --version') do set GIT_VERSION=%%i
echo ‚úÖ Git found: %GIT_VERSION%
echo.

REM Check if already a Git repository
if exist ".git" (
    echo ‚úÖ Git repository already exists
    echo.
) else (
    echo üîß Initializing Git repository...
    git init
    if %errorlevel% neq 0 (
        echo ‚ùå Failed to initialize Git repository
        pause
        exit /b 1
    )
    echo ‚úÖ Git repository initialized
    echo.
)

REM Check Git configuration
echo üîç Checking Git configuration...
git config user.name >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ö†Ô∏è  Git user not configured
    echo.
    set /p USERNAME="Enter your name: "
    set /p EMAIL="Enter your email: "
    git config --global user.name "!USERNAME!"
    git config --global user.email "!EMAIL!"
    echo ‚úÖ Git user configured
    echo.
) else (
    for /f "tokens=*" %%i in ('git config user.name') do set CURRENT_USER=%%i
    for /f "tokens=*" %%i in ('git config user.email') do set CURRENT_EMAIL=%%i
    echo ‚úÖ Git configured for: !CURRENT_USER! ^<!CURRENT_EMAIL!^>
    echo.
)

REM Create .gitignore if it doesn't exist
if not exist ".gitignore" (
    echo üìù Creating .gitignore file...
    echo # Dependencies> .gitignore
    echo node_modules/>> .gitignore
    echo npm-debug.log*>> .gitignore
    echo yarn-debug.log*>> .gitignore
    echo yarn-error.log*>> .gitignore
    echo.>> .gitignore
    echo # Next.js>> .gitignore
    echo .next/>> .gitignore
    echo out/>> .gitignore
    echo build/>> .gitignore
    echo.>> .gitignore
    echo # Environment variables>> .gitignore
    echo .env>> .gitignore
    echo .env.local>> .gitignore
    echo .env.development.local>> .gitignore
    echo .env.test.local>> .gitignore
    echo .env.production.local>> .gitignore
    echo.>> .gitignore
    echo # IDE>> .gitignore
    echo .vscode/>> .gitignore
    echo .idea/>> .gitignore
    echo *.swp>> .gitignore
    echo *.swo>> .gitignore
    echo.>> .gitignore
    echo # OS>> .gitignore
    echo .DS_Store>> .gitignore
    echo Thumbs.db>> .gitignore
    echo desktop.ini>> .gitignore
    echo.>> .gitignore
    echo # Logs>> .gitignore
    echo *.log>> .gitignore
    echo logs/>> .gitignore
    echo.>> .gitignore
    echo # Runtime data>> .gitignore
    echo pids>> .gitignore
    echo *.pid>> .gitignore
    echo *.seed>> .gitignore
    echo *.pid.lock>> .gitignore
    echo.>> .gitignore
    echo # Coverage directory used by tools like istanbul>> .gitignore
    echo coverage/>> .gitignore
    echo *.lcov>> .gitignore
    echo.>> .gitignore
    echo # Dependency directories>> .gitignore
    echo jspm_packages/>> .gitignore
    echo.>> .gitignore
    echo # Optional npm cache directory>> .gitignore
    echo .npm>> .gitignore
    echo.>> .gitignore
    echo # Optional eslint cache>> .gitignore
    echo .eslintcache>> .gitignore
    echo.>> .gitignore
    echo # Temporary folders>> .gitignore
    echo tmp/>> .gitignore
    echo temp/>> .gitignore
    echo ‚úÖ .gitignore created
    echo.
) else (
    echo ‚úÖ .gitignore already exists
    echo.
)

REM Add files to Git
echo üì¶ Adding files to Git...
git add .
if %errorlevel% neq 0 (
    echo ‚ùå Failed to add files to Git
    pause
    exit /b 1
)
echo ‚úÖ Files added to Git
echo.

REM Check if there are changes to commit
git diff --cached --quiet
if %errorlevel% equ 0 (
    echo ‚úÖ No new changes to commit
    echo.
) else (
    echo üíæ Creating commit...
    git commit -m "ClothingDrop: South African e-commerce platform with demo features"
    if %errorlevel% neq 0 (
        echo ‚ùå Failed to create commit
        pause
        exit /b 1
    )
    echo ‚úÖ Commit created successfully
    echo.
)

echo ========================================================
echo   üéØ READY TO PUBLISH TO GITHUB!
echo ========================================================
echo.

echo üìã Next steps:
echo.
echo 1. üåê Create GitHub repository:
echo    - Go to https://github.com/new
echo    - Repository name: clothingdrop-sa
echo    - Description: South African e-commerce platform
echo    - Make it PUBLIC
echo    - DON'T initialize with README
echo    - Click "Create repository"
echo.

echo 2. üîó Connect to GitHub:
echo    Copy and paste these commands in a new terminal:
echo.
echo    git remote add origin https://github.com/YOUR_USERNAME/clothingdrop-sa.git
echo    git branch -M main
echo    git push -u origin main
echo.

echo 3. üéâ Your app will be live on GitHub!
echo.

echo ========================================================
echo   üìä WHAT YOU'RE PUBLISHING:
echo ========================================================
echo.

echo ‚úÖ Complete Next.js e-commerce application
echo ‚úÖ 6 demo products with ZAR pricing
echo ‚úÖ Shopping cart and order tracking
echo ‚úÖ South African localization
echo ‚úÖ Professional documentation
echo ‚úÖ TypeScript and Tailwind CSS
echo ‚úÖ API routes and components
echo ‚úÖ Mobile responsive design
echo.

echo üåü This will be an excellent portfolio project!
echo.

echo Press any key to open GitHub in your browser...
pause >nul

start https://github.com/new

echo.
echo üöÄ GitHub opened in browser!
echo.
echo üí° After creating the repository:
echo    1. Copy the repository URL
echo    2. Run the git commands shown above
echo    3. Your ClothingDrop app will be live!
echo.

echo Press any key to exit...
pause >nul
